name: backend_actions
on:
  workflow_dispatch:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend_actions.yml'
    branches:
      - master
defaults:
  run:
    working-directory: backend
jobs:
  test-locally:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ../requirements.txt
      - name: Setup local DynamoDB
        run: docker run --add-host=host.docker.internal:host-gateway -p 8000:8000 amazon/dynamodb-local &
      - name: Wait for it to boot up
        run: python src/wait_for_dynamodb.py
      - name: Create table
        run: aws dynamodb create-table --cli-input-json file://src/test/make_table.json --endpoint-url http://localhost:8000
      - name: start local API Gateway
        run: sam local start-api --env-vars env.json &
      - id:   run-tests
        name: Run tests
        run: |
          cd src/
          python test_dynamodb_lambda.py
          echo "::set-output name=result::$?"
      - name: Package and deploy
        if: ${{ steps.run-tests.outputs.result == '0' }}
        run: |
          mkdir gen
          aws cloudformation package --s3-bucket cloud-portfolio-bucket \
          --template-file template.yaml --output-template-file gen/template-gen.yaml
          aws cloudformation deploy --template-file gen/template-gen.yaml --stack-name cloud-formation-portfolio \
          --capabilities CAPABILITY_IAM
